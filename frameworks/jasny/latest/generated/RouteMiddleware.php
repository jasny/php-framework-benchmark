<?php

namespace App\Generated;

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Server\MiddlewareInterface;
use Psr\Http\Server\RequestHandlerInterface;

/**
 * PSR-15 compatible middleware that add route attributes to the server request.
 *
 * This file is generated by SwitchRoute.
 * Do not modify it manually. Any changes will be overwritten.
 */
class RouteMiddleware implements MiddlewareInterface
{
    /**
     * Add routing attributes to the server request
     */
    protected function applyRouting(ServerRequestInterface $request): ServerRequestInterface
    {
        $method = $request->getMethod();
        $path = $request->getUri()->getPath();
        $segments = $path === "/" ? [] : explode("/", trim($path, "/"));

        switch ($segments[0] ?? "\0") {
            case "\0":
                $request = $request->withAttribute('route:allowed_methods', ['GET']);
                switch ($method) {
                    case 'GET':
                        return $request
                            ->withAttribute('route:controller', 'index');
                }
                break 1;
            case "hello":
                switch ($segments[1] ?? "\0") {
                    case "\0":
                        $request = $request->withAttribute('route:allowed_methods', ['GET']);
                        switch ($method) {
                            case 'GET':
                                return $request
                                    ->withAttribute('route:controller', 'hello');
                        }
                        break 2;
                }
                break 1;
        }

        return $request;
    }

    /**
     * Process an incoming server request.
     */
    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface
    {
        return $handler->handle($this->applyRouting($request));
    }
}